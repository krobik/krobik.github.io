{"version":3,"sources":["components/Table/index.ts","components/Table/Table.tsx","views/home/index.tsx"],"names":["Table","dataIndex","data","useSelector","store","searchInput","useState","searchText","searchedColumn","state","setState","handleSearch","selectedKeys","confirm","handleReset","clearFilters","columns","title","key","width","filterDropdown","setSelectedKeys","style","padding","ref","node","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","type","onClick","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","onFilter","record","console","log","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","sorter","a","b","libraries","order","to","dataSource","map","el","name","fullname","territory","HomePage"],"mappings":"6OAEeA,ECKD,WACV,IAQ8BC,EARxBC,EAAOC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,QACjDG,EAAmB,KAFP,EAIUC,mBAAqB,CAC3CC,WAAY,GACZC,eAAgB,KANJ,mBAITC,EAJS,KAIFC,EAJE,KA+DVC,EAAe,SAACC,EAAwBC,EAAcZ,GACxDY,IACAH,EAAS,CACLH,WAAYK,EAAa,GACzBJ,eAAgBP,KAIlBa,EAAc,SAACC,GACjBA,IACAL,EAAS,CAAEH,WAAY,MAGrBS,EAAU,CAAC,aAETC,MAAO,uCACPhB,UAAW,YACXiB,IAAK,YACLC,MAAO,QAxEelB,EAyEE,YAzEqB,CACjDmB,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBT,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASE,EAA3C,EAA2CA,aAA3C,OACZ,sBAAKO,MAAO,CAAEC,QAAS,GAAvB,UACI,cAAC,IAAD,CACIC,IAAK,SAAAC,GAAUpB,EAAcoB,GAC7BC,YAAY,yFACZC,MAAOf,EAAa,GACpBgB,SAAU,SAAAC,GAAC,OAAIR,EAAgBQ,EAAEC,OAAOH,MAAQ,CAACE,EAAEC,OAAOH,OAAS,KACnEI,aAAc,kBAAMpB,EAAaC,EAAcC,EAASZ,IACxDqB,MAAO,CAAEH,MAAO,IAAKa,aAAc,EAAGC,QAAS,WAEnD,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,KAAK,UACLC,QAAS,kBAAMxB,EAAaC,EAAcC,EAASZ,IACnDmC,KAAM,cAACC,EAAA,EAAD,IACNC,KAAK,QACLhB,MAAO,CAAEH,MAAO,IALpB,4CAUA,cAAC,IAAD,CACIgB,QAAS,kBAAMrB,EAAYC,IAC3BuB,KAAK,QACLhB,MAAO,CAAEH,MAAO,IAHpB,qEASZoB,WAAY,SAACC,GAAD,OAAuB,cAACH,EAAA,EAAD,CAAgBf,MAAO,CAAEmB,MAAOD,EAAW,eAAYE,MAC1FC,SAAU,SAAChB,EAAYiB,GAEnB,OADAC,QAAQC,IAAI,QAASnB,GACdiB,EAAO3C,GAAa2C,EAAO3C,GAAW8C,WAAWC,cAAcC,SAAStB,EAAMqB,eAAiB,IAE1GE,8BAA+B,SAACC,GACxBA,GACAC,YAAW,kBAAM/C,EAAYgD,WAAU,MAG/CC,OAAQ,SAACC,GAAD,OACJ9C,EAAMD,iBAAmBP,EACrB,cAAC,IAAD,CACIuD,eAAgB,CAAEC,gBAAiB,UAAWlC,QAAS,GACvDmC,YAAa,CAACjD,EAAMF,YACpBoD,YAAU,EACVC,gBAAiBL,EAAOA,EAAKR,WAAa,KAG9CQ,MAyBR,CACItC,MAAO,mDACPhB,UAAW,OACXiB,IAAK,OACLC,MAAO,OAEX,CACIF,MAAO,sHACPhB,UAAW,YACXiB,IAAK,YACLC,MAAO,MACP0C,OAAQ,SAACC,EAAwBC,GAAzB,OAAoDD,EAAEE,UAAYD,EAAEC,YAEhF,CACI/C,MAAO,mDACPE,MAAO,KACPD,IAAK,UACLoC,OAAQ,YAAqC,IAAlCW,EAAiC,EAAjCA,MACP,OACI,cAAC,IAAD,CAAO3B,KAAK,SAAZ,SACI,cAAC,IAAD,CAAM4B,GAAE,mBAAcD,GAAtB,yEAmBpB,OACI,cAAC,IAAD,CAAUjD,QAASA,EAASmD,WAZrBjE,EAAKkE,KAAI,SAACC,GACb,MAAO,CACHnD,IAAKmD,EAAGJ,MACRA,MAAOI,EAAGJ,MACVK,KAAMD,EAAGE,SACTC,UAAWH,EAAGG,UACdR,UAAWK,EAAGL,iBCtHfS,UAJY,WACvB,OAAO,cAAC,EAAD","file":"static/js/6.633ef270.chunk.js","sourcesContent":["import Table from './Table'\r\n\r\nexport default Table","import { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Highlighter from 'react-highlight-words'\r\nimport { Table as TableAnt, Space, Input, Button } from 'antd'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\n\r\nconst Table = () => {\r\n    const data = useSelector((store: RootState) => store.data)\r\n    let searchInput: any = null\r\n\r\n    const [state, setState] = useState<StateTable>({\r\n        searchText: '',\r\n        searchedColumn: '',\r\n    })\r\n\r\n    const getColumnSearchProps = (dataIndex: string) => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }: filterDropdownInterface) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => { searchInput = node }}\r\n                    placeholder='Поиск по региону'\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Поиск\r\n                    </Button>\r\n\r\n                    <Button\r\n                        onClick={() => handleReset(clearFilters)}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}>\r\n                        Сбросить\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: (filtered: boolean) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value: any, record: any) => {\r\n            console.log('value', value)\r\n            return record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : ''\r\n        },\r\n        onFilterDropdownVisibleChange: (visible: boolean) => {\r\n            if (visible) {\r\n                setTimeout(() => searchInput.select(), 100)\r\n            }\r\n        },\r\n        render: (text: string) =>\r\n            state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    })\r\n\r\n    const handleSearch = (selectedKeys: string[], confirm: any, dataIndex: string) => {\r\n        confirm()\r\n        setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        })\r\n    }\r\n\r\n    const handleReset = (clearFilters: any) => {\r\n        clearFilters()\r\n        setState({ searchText: '' })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Регион',\r\n            dataIndex: 'territory',\r\n            key: 'territory',\r\n            width: '25%',\r\n            ...getColumnSearchProps('territory'),\r\n        },\r\n        {\r\n            title: 'Название',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: '25%',\r\n        },\r\n        {\r\n            title: 'Количество библиотек',\r\n            dataIndex: 'libraries',\r\n            key: 'libraries',\r\n            width: '20%',\r\n            sorter: (a: dataSourceInterface, b: dataSourceInterface) => a.libraries - b.libraries,\r\n        },\r\n        {\r\n            title: 'Действия',\r\n            width: '5%',\r\n            key: 'actions',\r\n            render: ({ order }: dataSourceInterface) => {\r\n                return (\r\n                    <Space size=\"middle\" >\r\n                        <Link to={`/library/${order}`}>Подробнее</Link>\r\n                    </Space >\r\n                )\r\n            },\r\n        },\r\n    ]\r\n\r\n    const generateDataSource = () => {\r\n        return data.map((el) => {\r\n            return {\r\n                key: el.order,\r\n                order: el.order,\r\n                name: el.fullname,\r\n                territory: el.territory,\r\n                libraries: el.libraries,\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <TableAnt columns={columns} dataSource={generateDataSource()} />\r\n    )\r\n}\r\n\r\n\r\nexport default Table","import React from \"react\"\r\nimport Table from \"../../components/Table\"\r\n\r\nconst HomePage: React.FC = () => {\r\n    return <Table />\r\n}\r\n\r\nexport default HomePage"],"sourceRoot":""}