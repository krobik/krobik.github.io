{"version":3,"sources":["components/Description/index.ts","components/Description/Description.tsx","components/LibraryCard/index.ts","components/LibraryCard/LibraryCard.tsx","views/libraryDetail/index.tsx"],"names":["Description","data","console","log","size","column","map","el","Item","label","name","value","LibraryCard","id","useRouteMatch","params","useSelector","store","filter","order","Number","LibraryCardData","DetailSubjectMap","Map","prop","set","has","get","generatedDataArr","onBack","window","history","back","title","fullname","subTitle","address","LibraryDetailsPage"],"mappings":"iMAEeA,ECIsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEpC,OADAC,QAAQC,IAAI,OAAQF,GAEhB,cAAC,IAAD,CAAcG,KAAK,QAAQC,OAAQ,EAAnC,SACMJ,EAAKK,KAAI,SAACC,GACR,OACI,cAAC,IAAaC,KAAd,CAAmBC,MAAOF,EAAGG,KAA7B,SACKH,EAAGI,OADgCJ,EAAGG,YCVhDE,ECQe,WAAO,IACfC,EAASC,cAAnBC,OAAUF,GADc,EAGnBG,aAAY,SAACC,GAAD,OAAsBA,EAAMhB,QACtBiB,QAAO,SAACX,GAAD,OAA6BA,EAAGY,QAAUC,OAAOP,MAAhFQ,EAJyB,oBAM1BC,EAAmB,IAAIC,IAY7B,IAAK,IAAIC,KAVTF,EAAiBG,IAAI,QAAS,CAAEf,KAAM,mFACtCY,EAAiBG,IAAI,SAAU,CAAEf,KAAM,uEACvCY,EAAiBG,IAAI,eAAgB,CAAEf,KAAM,4GAC7CY,EAAiBG,IAAI,YAAa,CAAEf,KAAM,uEAC1CY,EAAiBG,IAAI,cAAe,CAAEf,KAAM,uEAC5CY,EAAiBG,IAAI,YAAa,CAAEf,KAAM,2DAC1CY,EAAiBG,IAAI,sBAAuB,CAAEf,KAAM,gJACpDY,EAAiBG,IAAI,YAAa,CAAEf,KAAM,uEAC1CY,EAAiBG,IAAI,oBAAqB,CAAEf,KAAM,4GAEjCW,EACTC,EAAiBI,IAAIF,IAErBF,EAAiBG,IAAID,EAArB,2BAAgCF,EAAiBK,IAAIH,IAArD,IAA4Db,MAAOU,EAAgBG,MAI3F,IAAMI,EAAmB,YAAIN,GAAkBhB,KAAI,gBAAIK,EAAJ,0CAAqBA,MAExE,OACI,mCACI,cAAC,IAAD,CACIkB,OAAQ,kBAAMC,OAAOC,QAAQC,QAC7BC,MAAOZ,EAAgBa,SACvBC,SAAUd,EAAgBe,QAH9B,SAKI,cAAC,EAAD,CAAanC,KAAM2B,SCtCpBS,UAJY,WACvB,OAAO,cAAC,EAAD","file":"static/js/7.e2d5aed8.chunk.js","sourcesContent":["import Description from './Description'\r\n\r\nexport default Description","import { Descriptions } from 'antd'\r\n\r\ninterface Props {\r\n    data: { [x: string]: string | number }[]\r\n}\r\n\r\nconst Description: React.FC<Props> = ({ data }) => {\r\n    console.log('data', data)\r\n    return (\r\n        <Descriptions size=\"small\" column={3}>\r\n            { data.map((el) => {\r\n                return (\r\n                    <Descriptions.Item label={el.name} key={el.name}>\r\n                        {el.value}\r\n                    </Descriptions.Item>\r\n                )\r\n            })}\r\n        </Descriptions>\r\n    )\r\n}\r\n\r\nexport default Description","import LibraryCard from './LibraryCard'\r\n\r\nexport default LibraryCard","import { useSelector } from 'react-redux'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport { PageHeader } from 'antd'\r\n\r\nimport Description from '../Description'\r\n\r\ninterface LooseObject {\r\n    [key: string]: string | number\r\n}\r\n\r\nconst LibraryCard: React.FC = () => {\r\n    const { params: { id } } = useRouteMatch<MatchParams>()\r\n\r\n    const data = useSelector((store: RootState) => store.data)\r\n    const [LibraryCardData] = data.filter((el: RootStateWithOutArr) => el.order === Number(id))\r\n\r\n    const DetailSubjectMap = new Map<string, LooseObject>()\r\n\r\n    DetailSubjectMap.set(\"users\", { name: 'Пользователей' })\r\n    DetailSubjectMap.set(\"visits\", { name: 'Посетителей' })\r\n    DetailSubjectMap.set(\"visits_sites\", { name: 'Посетителей сайтов' })\r\n    DetailSubjectMap.set(\"computers\", { name: 'Компьютеров' })\r\n    DetailSubjectMap.set(\"subscribers\", { name: 'Подписчиков' })\r\n    DetailSubjectMap.set(\"libraries\", { name: 'Библиотек' })\r\n    DetailSubjectMap.set(\"libraries_computers\", { name: 'Библиотечных компьютеров' })\r\n    DetailSubjectMap.set(\"employees\", { name: 'Сотрудников' })\r\n    DetailSubjectMap.set(\"internet_catalogs\", { name: 'Интернет каталогов' })\r\n\r\n    for (let prop in LibraryCardData) {\r\n        if (DetailSubjectMap.has(prop)) {\r\n            /* DetailSubjectMap.set(prop, { ...DetailSubjectMap.get(prop), value: LibraryCardData[prop] }) */\r\n            DetailSubjectMap.set(prop, { ...DetailSubjectMap.get(prop), value: LibraryCardData[prop as keyof typeof LibraryCardData] })\r\n        }\r\n    }\r\n\r\n    const generatedDataArr = [...DetailSubjectMap].map(([, value]) => ({ ...value }))\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                onBack={() => window.history.back()}\r\n                title={LibraryCardData.fullname}\r\n                subTitle={LibraryCardData.address}\r\n            >\r\n                <Description data={generatedDataArr} />\r\n            </PageHeader>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LibraryCard","import LibraryCard from \"../../components/LibraryCard\"\r\n\r\nconst LibraryDetailsPage = () => {\r\n    return <LibraryCard />\r\n}\r\n\r\nexport default LibraryDetailsPage"],"sourceRoot":""}